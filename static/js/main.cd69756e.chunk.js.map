{"version":3,"sources":["components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","components/NewMovie/NewMovie.js","App.js","index.js"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","defaultProps","MoviesList","movies","map","movie","key","imdbId","NewMovie","state","imgUrlError","imdbUrlError","submitForm","event","preventDefault","props","onAdd","setState","fieldsChange","target","value","name","test","this","onSubmit","htmlFor","type","id","placeholder","required","onChange","classNames","fildErr","disabled","Component","App","moviesFromServer","addMovie","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.cd69756e.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './MovieCard.scss';\n\nexport const MovieCard = ({ title, description, imgUrl, imdbUrl }) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n\nMovieCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string,\n  imgUrl: PropTypes.string.isRequired,\n  imdbUrl: PropTypes.string.isRequired,\n};\n\nMovieCard.defaultProps = {\n  description: '',\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\nexport const MoviesList = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      description: PropTypes.string,\n      imgUrl: PropTypes.string.isRequired,\n      imdbUrl: PropTypes.string.isRequired,\n    }),\n  ),\n};\n\nMoviesList.defaultProps = {\n  movies: [],\n};\n","import React, { Component } from 'react';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport './NewMovie.scss';\n\nexport class NewMovie extends Component {\n  state = {\n    title: '',\n    description: '',\n    imgUrl: '',\n    imdbUrl: '',\n    imdbId: '',\n    imgUrlError: false,\n    imdbUrlError: false,\n  };\n\n  submitForm = (event) => {\n    event.preventDefault();\n    const { title, description, imgUrl, imdbUrl, imdbId } = this.state;\n\n    const movie = {\n      title,\n      description,\n      imgUrl,\n      imdbUrl,\n      imdbId,\n    };\n\n    this.props.onAdd(movie);\n\n    this.setState({\n      title: '',\n      description: '',\n      imgUrl: '',\n      imdbUrl: '',\n      imdbId: '',\n      imgUrlError: false,\n      imdbUrlError: false,\n    });\n  }\n\n  fieldsChange = (event) => {\n    const { value, name } = event.target;\n\n    // eslint-disable-next-line max-len\n    const validate = /^((([A-Za-z]{3,9}:(?:\\/\\/)?)(?:[-;:&=+$,\\w]+@)?[A-Za-z0-9.-]+|(?:www\\.|[-;:&=+$,\\w]+@)[A-Za-z0-9.-]+)((?:\\/[+~%/.\\w-_]*)?\\??(?:[-+=&;%@.\\w_]*)#?(?:[.!/\\\\\\w]*))?)$/;\n\n    if (name === 'imgUrl' || name === 'imdbUrl') {\n      if (!validate.test(value)) {\n        this.setState({ [name]: value });\n        (name === 'imgUrl')\n          ? this.setState({ imgUrlError: true })\n          : this.setState({ imdbUrlError: true });\n      } else {\n        this.setState({ [name]: value });\n        (name === 'imgUrl')\n          ? this.setState({ imgUrlError: false })\n          : this.setState({ imdbUrlError: false });\n      }\n    } else {\n      this.setState({ [name]: value });\n    }\n  }\n\n  render() {\n    const { imdbUrlError, imgUrlError } = this.state;\n\n    return (\n      <form\n        onSubmit={this.submitForm}\n      >\n        <label htmlFor=\"title-text\" className=\"label\">\n          Title\n        </label>\n        <input\n          type=\"text\"\n          id=\"title-text\"\n          name=\"title\"\n          className=\"fild\"\n          placeholder=\"Title\"\n          required=\"true\"\n          value={this.state.title}\n          onChange={this.fieldsChange}\n        />\n        <label htmlFor=\"descript\" className=\"label\">\n          Description\n        </label>\n        <textarea\n          name=\"description\"\n          id=\"descript\"\n          className=\"fild\"\n          placeholder=\"Describe the movie\"\n          value={this.state.description}\n          onChange={this.fieldsChange}\n        />\n        {!imgUrlError\n          ? (\n            <label htmlFor=\"img-url\" className=\"label\">\n              ImgUrl\n            </label>\n          ) : (\n            <label htmlFor=\"img-url\" className=\"label-err\">\n              Invalid URL\n            </label>\n          )\n        }\n        <input\n          type=\"text\"\n          id=\"img-url\"\n          name=\"imgUrl\"\n          className={classNames(`fild`, {\n            fildErr: imgUrlError === true,\n          })}\n          placeholder=\"ImgUrl\"\n          required=\"true\"\n          value={this.state.imgUrl}\n          onChange={this.fieldsChange}\n        />\n        {!imdbUrlError\n          ? (\n            <label htmlFor=\"imdb-url\" className=\"label\">\n              ImdbUrl\n            </label>\n          ) : (\n            <label htmlFor=\"imdb-url\" className=\"label-err\">\n              Invalid URL\n            </label>\n          )\n        }\n        <input\n          type=\"text\"\n          id=\"imdb-url\"\n          name=\"imdbUrl\"\n          className={classNames(`fild`, {\n            fildErr: imdbUrlError === true,\n          })}\n          placeholder=\"ImdbUrl\"\n          required=\"true\"\n          value={this.state.imdbUrl}\n          onChange={this.fieldsChange}\n        />\n        <label htmlFor=\"imdb-id\" className=\"label\">\n          ImdbId\n        </label>\n        <input\n          type=\"text\"\n          id=\"imdb-id\"\n          name=\"imdbId\"\n          className=\"fild\"\n          placeholder=\"ImdbId\"\n          required=\"true\"\n          value={this.state.imdbId}\n          onChange={this.fieldsChange}\n        />\n        <div>\n          <button\n            disabled={imgUrlError || imdbUrlError}\n            type=\"submit\"\n            className=\"button\"\n          >\n            Add movie\n          </button>\n        </div>\n      </form>\n    );\n  }\n}\n\nNewMovie.propTypes = {\n  onAdd: PropTypes.func.isRequired,\n};\n","import React, { Component } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\n\nexport class App extends Component {\n  state = {\n    movies: moviesFromServer,\n  };\n\n  addMovie = (movie) => {\n    this.setState(state => ({\n      movies: [...state.movies, movie],\n    }));\n  };\n\n  render() {\n    const { movies } = this.state;\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <MoviesList movies={movies} />\n        </div>\n        <div className=\"sidebar\">\n          <NewMovie onAdd={this.addMovie} />\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}